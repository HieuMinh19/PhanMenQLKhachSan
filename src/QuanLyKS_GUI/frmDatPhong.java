/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuanLyKS_GUI;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import QuanLyKS_DAL.DichVu_DAL;
import QuanLyKS_DAL.LoaiPhong_DAL;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import com.ibm.icu.text.SimpleDateFormat;
import com.toedter.calendar.JCalendar;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import QuanLyKS_DAL.Phong_DAL;
import QuanLyKS_DTO.CTDatPhong_DTO;
import QuanLyKS_DTO.DichVu_DTO;
import QuanLyKS_DTO.LoaiPhong_DTO;
import QuanLyKS_BUS.CTDatPhong_BUS;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.InputMethodListener;
import java.awt.event.InputMethodEvent;

/**
 *
 * @author MyPC
 */
public class frmDatPhong extends javax.swing.JInternalFrame {
	/**
     * Creates new form DatPhong
     */
    public frmDatPhong() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    
    
    //luu giu id dich vu duoc chon
    private static int idDV  = 0;		//save id DichVu selected
    private static int idLP  = 0;		//save id LoaiPhong selected
    private String NgayNhan = null;
    private String NgayTra = null;
    private void initComponents() {
         	
    	//prepare list
    	ArrayList<DichVu_DTO> listDV_DTO =  new ArrayList<DichVu_DTO>();
    	ArrayList<LoaiPhong_DTO> listLP_DTO =  new ArrayList<LoaiPhong_DTO>();
    	
    	DichVu_DAL dvDAL = new DichVu_DAL();
    	Phong_DAL phongDAL = new Phong_DAL();
        ResultSet rsListDV = dvDAL.getListDV();
        LoaiPhong_DAL lpDAL = new LoaiPhong_DAL();
        ResultSet rsLP = lpDAL.getListLoaiPhong();
    	    	
        txtTenKhachHang = new javax.swing.JTextField();
        TenKhachHang = new javax.swing.JLabel();
        cbxLoaiPhong = new javax.swing.JComboBox<>();
        JCalendar dtNgayTra = new JCalendar();
        JCalendar dtNgayNhan = new JCalendar();
        JComboBox<String> cbxMaPhong = new JComboBox<String>();
        cbxMaPhong.setInheritsPopupMenu(true);
        cbxMaPhong.setIgnoreRepaint(true);
        dtNgayNhan.addInputMethodListener(new InputMethodListener() {
        	public void caretPositionChanged(InputMethodEvent arg0) {
        	}
        	public void inputMethodTextChanged(InputMethodEvent arg0) {
        		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         		NgayNhan = sdf.format( dtNgayNhan.getDate() );
         		NgayTra = sdf.format( dtNgayTra.getDate() );
         		//load list Phong
                ResultSet rslistPhong = Phong_DAL.selectCondition(idLP, NgayNhan, NgayTra);
                 try {    
               	  cbxMaPhong.removeAllItems();
                 	while(rslistPhong.next() ) {
                 		cbxMaPhong.addItem(rslistPhong.getString("MaPhong"));
                 		cbxMaPhong.getSelectedItem();
         		   }
         		} catch (SQLException e) {
         			// TODO Auto-generated catch block
         			e.printStackTrace();
         		}
        	}
        });
        dtNgayNhan.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        	}
        });
      
        dtNgayNhan.addPropertyChangeListener(new PropertyChangeListener() {
        	public void propertyChange(PropertyChangeEvent arg0) {
        		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         		NgayNhan = sdf.format( dtNgayNhan.getDate() );
         		NgayTra = sdf.format( dtNgayTra.getDate() );
         		//load list Phong
                ResultSet rslistPhong = Phong_DAL.selectCondition(idLP, NgayNhan, NgayTra);
                 try {    
               	  cbxMaPhong.removeAllItems();
                 	while(rslistPhong.next() ) {
                 		cbxMaPhong.addItem(rslistPhong.getString("MaPhong"));
                 		cbxMaPhong.getSelectedItem();
         		   }
         		} catch (SQLException e) {
         			// TODO Auto-generated catch block
         			e.printStackTrace();
         		}
        	}
        });
      
        
        cbxLoaiPhong.addItemListener(new ItemListener() {
        	public void itemStateChanged(ItemEvent arg0) {
        		//get the value selected of cbx and using loop to scan Arraylist LoaiPhong
        		//after find the LoaiPhong selected, using function getMaLoaiPhong to get ID
        		String nameLP = (String) cbxLoaiPhong.getSelectedItem();
        		for(int i = 0; i < listLP_DTO.size(); i++) {
        			LoaiPhong_DTO dvCompare = listLP_DTO.get(i);
        			if(nameLP.equals( dvCompare.getTenLoaiPhong() ) )
        				idLP = dvCompare.getMaLoaiPhong();
        		}
        		
        		
//        		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//         		NgayNhan = sdf.format( dtNgayNhan.getDate() );
//         		NgayTra = sdf.format( dtNgayTra.getDate() );
         		//load list Phong
                 ResultSet rslistPhong = Phong_DAL.selectCondition(idLP, NgayNhan, NgayTra);
                  try {    
                	  cbxMaPhong.removeAllItems();
                  	while(rslistPhong.next() ) {
                  		cbxMaPhong.addItem(rslistPhong.getString("MaPhong"));
                  		cbxMaPhong.getSelectedItem();
          		   }
          		} catch (SQLException e) {
          			// TODO Auto-generated catch block
          			e.printStackTrace();
          		}
        	}
        });
        cbxLoaiPhong.setIgnoreRepaint(true);
        cbxLoaiPhong.setInheritsPopupMenu(true);
        NgayDatPhong = new javax.swing.JLabel();
        LoaiPhong = new javax.swing.JLabel();
        CMND = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        btnDongY = new javax.swing.JButton();
        btnDongY.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		
        		CTDatPhong_BUS ctdpBUS = new CTDatPhong_BUS();        		
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
				NgayNhan = sdf.format( dtNgayNhan.getDate() );
				NgayTra = sdf.format( dtNgayTra.getDate() );
				String strMaPhong = (cbxMaPhong.getSelectedItem()).toString();
				int iMaPhong = Integer.parseInt(strMaPhong);
        		CTDatPhong_DTO ctdpDTO = new CTDatPhong_DTO(txtTenKhachHang.getText(), txtCMND.getText(), idDV, iMaPhong,NgayNhan, NgayTra);
        		
        		if(CTDatPhong_BUS.Insert(ctdpDTO) == true) {
        			JOptionPane.showMessageDialog(null, "Insert booking Success", "Success: " + "Success Mesage", JOptionPane.INFORMATION_MESSAGE);
        		}else {
        			JOptionPane.showMessageDialog(null, "Insert booking Fail", "Fail: " + "Success Mesage", JOptionPane.CLOSED_OPTION);
        		}
        		
        	}
        });
        btnThoat = new javax.swing.JButton();
       
        jLabel9 = new javax.swing.JLabel();
        GiaPhong = new javax.swing.JLabel();
        cbxDichVu = new javax.swing.JComboBox<>();
        cbxDichVu.addItemListener(new ItemListener() {
        	public void itemStateChanged(ItemEvent e) {
        		Object objSelect = cbxDichVu.getSelectedItem();
        		String nameDV = objSelect.toString();
        		for(int i = 0; i < listDV_DTO.size(); i++) {
        			DichVu_DTO dvCompare = listDV_DTO.get(i);
        			if(nameDV.equals( dvCompare.getTenDichVu() ) )
        				idDV = dvCompare.getMaDichVu();
        		}
        	}
        });
        cbxDichVu.addActionListener(new ActionListener() {
        	
        	public void actionPerformed(ActionEvent arg0) {
        		
        	}
        });
        cbxDichVu.setFocusTraversalKeysEnabled(false);
     
        DichVu = new javax.swing.JLabel();

        setTitle("Ã„â€˜Ã¡ÂºÂ·t phÃƒÂ²ng");

        txtTenKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKhachHangActionPerformed(evt);
            }
        });

        TenKhachHang.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        TenKhachHang.setText("T\u00CAN KH\u00C1CH H\u00C0NG");
        
       
       //Load list LoaiPhong
        try {
        	while(rsLP.next() ) {	
        		LoaiPhong_DTO lpTemp = new LoaiPhong_DTO(rsLP.getInt("MaLoaiPhong"), rsLP.getString("TenLoaiPhong"));
        		listLP_DTO.add(lpTemp);
        		cbxLoaiPhong.addItem(rsLP.getString("TenLoaiPhong"));
        		cbxLoaiPhong.getSelectedItem();
		   }
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
      
        cbxLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLoaiPhongActionPerformed(evt);
            }
        });

        NgayDatPhong.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        NgayDatPhong.setText("NG\u00C0Y NH\u1EACN - TR\u1EA2");

        LoaiPhong.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        LoaiPhong.setText("LO\u1EA0I PH\u00D2NG");

        CMND.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        CMND.setText("CMND");

        txtCMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMNDActionPerformed(evt);
            }
        });

        btnDongY.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDongY.setText("\u0110\u1ED3ng \u00FD");

        btnThoat.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnThoat.setText("Tho\u00E1t");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel9.setText("\u0110\u1EB6T PH\u00D2NG");

        GiaPhong.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        GiaPhong.setText("M\u00C3 PH\u00D2NG");

        
        //load list DV
        try {     
        	while(rsListDV.next() ) {
        	
        		DichVu_DTO dvTemp = new DichVu_DTO(rsListDV.getInt("MaDichVu"), rsListDV.getString("TenDichVu"));
        		listDV_DTO.add(dvTemp);
        		cbxDichVu.addItem(rsListDV.getString("TenDichVu"));
        		cbxDichVu.getSelectedItem();
		   }
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        
      
        
        DichVu.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        DichVu.setText("D\u1ECACH V\u1EE4");
        
       
         btnThoat.addActionListener(new ActionListener() {
         	public void actionPerformed(ActionEvent arg0) {  
         		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         		NgayNhan = sdf.format( dtNgayNhan.getDate() );
         		NgayTra = sdf.format( dtNgayTra.getDate() );
         		//load list Phong
                 ResultSet rslistPhong = Phong_DAL.selectCondition(idLP, NgayNhan, NgayTra);
                  try {    
                	  cbxMaPhong.removeAllItems();
                  	while(rslistPhong.next() ) {
                  		cbxMaPhong.addItem(rslistPhong.getString("MaPhong"));
                  		cbxMaPhong.getSelectedItem();
          		   }
          		} catch (SQLException e) {
          			// TODO Auto-generated catch block
          			e.printStackTrace();
          		}
         	}
         });
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(0, 350, Short.MAX_VALUE)
        			.addComponent(jLabel9)
        			.addGap(221))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(37)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(TenKhachHang)
        					.addGap(36))
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(DichVu)
        						.addComponent(NgayDatPhong, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
        						.addComponent(CMND)
        						.addComponent(LoaiPhong, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)
        						.addComponent(GiaPhong))
        					.addGap(18)))
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(txtTenKhachHang, GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        					.addGap(141))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(dtNgayNhan, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addGap(64)
        					.addComponent(dtNgayTra, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap(270, Short.MAX_VALUE))))
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(cbxMaPhong, GroupLayout.PREFERRED_SIZE, 720, GroupLayout.PREFERRED_SIZE))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(189)
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(cbxLoaiPhong, Alignment.LEADING, 0, 720, Short.MAX_VALUE)
        						.addComponent(txtCMND, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        						.addComponent(cbxDichVu, Alignment.LEADING, 0, 606, Short.MAX_VALUE))))
        			.addGap(27))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(284)
        			.addComponent(btnDongY)
        			.addGap(123)
        			.addComponent(btnThoat)
        			.addContainerGap(359, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel9)
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtTenKhachHang, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(TenKhachHang, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(28)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(dtNgayTra, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(dtNgayNhan, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(99)
        					.addComponent(NgayDatPhong)))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(DichVu)
        				.addComponent(cbxDichVu, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtCMND, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(CMND))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cbxLoaiPhong, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(LoaiPhong))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cbxMaPhong, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(GiaPhong))
        			.addGap(48)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnDongY)
        				.addComponent(btnThoat))
        			.addGap(216))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKhachHangActionPerformed

    private void cbxLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLoaiPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxLoaiPhongActionPerformed

    private void txtCMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMNDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCMNDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CMND;
    private javax.swing.JLabel DichVu;
    private javax.swing.JLabel GiaPhong;
    private javax.swing.JLabel LoaiPhong;
    private javax.swing.JLabel NgayDatPhong;
    private javax.swing.JLabel TenKhachHang;
    private javax.swing.JButton btnDongY;
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox<String> cbxDichVu;
    private javax.swing.JComboBox<String> cbxLoaiPhong;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtTenKhachHang;
}
